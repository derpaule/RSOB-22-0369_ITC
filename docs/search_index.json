[["Caprin_ITC.html", "ITC data of G3BP1-NTF2 binding to Caprin-1 and USP10 1 Info about ITC analysis script 2 Load libraries 3 Visualization of ITC data 3.1 Import the data 3.2 ITC thermograms 3.3 Global sedphat fit plots 3.4 2D error surface 3.5 Comparison of dH and Kd values obtained for the ITC datasets 4 Comparison to BLI and nanoDSF 4.1 Comparison of affinities obtained from ITC, BLI and nanoDSF. 4.2 Result table", " ITC data of G3BP1-NTF2 binding to Caprin-1 and USP10 [Tim Schulte] 1 Info about ITC analysis script ITC data deposited as Suppplemental data on DRYAD. Data were analyzed using NITPIC and SEDPHAT. 2 Load libraries library(ggplot2) library(tidyverse) library(plyr) library(tidyr) library(stringr) library(ggforce) library(readr) library(ggsci) library(knitr) library(bookdown) library(tinytex) library(kableExtra) library(DT) library(xfun) library(readxl) library(vroom) library(metR) library(reshape2) library(misc3d) library(ggforce) library(RColorBrewer) library(ggpubr) library(bsts) library(prospectr) library(ggridges) library(svglite) 3 Visualization of ITC data The nitpic-processed data were saved and opened in Sedphat for global fitting. The fitted data were saved using the option “copy all data and save as new config” as well as by copying the data and data fit tables into Excel sheets. Two-dimensional error-surface projections and covariance matrices were saved as text files. 3.1 Import the data Import ITC data in Folder /data_itc nitpiclist_itc = list.files(path = &quot;./data_itc&quot;, pattern = &quot;*&quot;, recursive = TRUE, include.dirs = TRUE, full.names = TRUE) nitpiclist_itc.tib &lt;- as_tibble(nitpiclist_itc) nitpiclist_itc.all &lt;- nitpiclist_itc.tib %&gt;% dplyr::mutate(., datatype = str_extract(value, &quot;Covariance|dHvsKab|xls|data.txt|error.txt|fit.txt|\\\\.nitpic|error-dat|confidence|(.xp)$&quot;)) %&gt;% drop_na(datatype) %&gt;% dplyr::mutate(., datatype_corr = str_extract(datatype, &quot;Covariance|dHvsKab|xls|nitpic|error-dat|data.txt|error.txt|fit.txt|confidence|xp&quot;)) %&gt;% dplyr::select(., -datatype) %&gt;% separate(., value, into = c(&quot;toptopfolger&quot;, &quot;topfolder&quot;, &quot;sedfolder&quot;, &quot;subfolder&quot;, &quot;dataname&quot;), sep = &quot;/&quot;, remove = FALSE) %&gt;% dplyr::mutate(., detect_sym = str_detect(subfolder, &quot;(^[:symbol:])|^[:punct:]&quot;)) %&gt;% dplyr::mutate(., deleteme = case_when(datatype_corr ==&quot;xp&quot; &amp; detect_sym == &quot;TRUE&quot; ~ &quot;TRUE&quot;, TRUE ~ &quot;FALSE&quot;)) %&gt;% dplyr::filter(., deleteme != &quot;TRUE&quot;) %&gt;% dplyr::select(., !c(&quot;toptopfolger&quot;, &quot;topfolder&quot;, &quot;sedfolder&quot;)) vroom_pipe_f &lt;- function(grepvalue, colnames){ out &lt;- vroom(pipe(grepvalue), col_names = colnames) return(out) } vroom_pipe_basic_f &lt;- function(grepvalue){ out &lt;- vroom(pipe(grepvalue), delim=&quot;\\t&quot;) return(out) } addinjectionnumbers_f &lt;- function(df1, df2){ df1_out &lt;- df1 %&gt;% dplyr::mutate(., id = rep(c(1,2), length.out = length(heat))) %&gt;% dplyr::select(., -heat) %&gt;% dplyr::filter(., id &lt; 2) %&gt;% dplyr::mutate(., injnumber = row_number()) %&gt;% dplyr::select(., -id) df_out &lt;- df2 %&gt;% left_join(., df1_out) %&gt;% fill(., injnumber, .direction = c(&quot;down&quot;)) return(df_out) } filter_time_f &lt;- function(df_data, df_time){ df_data_out &lt;- df_data %&gt;% dplyr::filter(., time &lt; df_time) } change_nitpic_dH_f &lt;- function(df){ df_out &lt;- df %&gt;% drop_na(., NDH) %&gt;% mutate_if(., is.character, as.numeric) return(df_out) } extract_itcconcentrations_f &lt;- function(df){ df_out &lt;- df %&gt;% dplyr::summarize(., Vx = sum(INVJ), Xt = last(Xt), Mi = first(Mt), Mt = last(Mt)) %&gt;% dplyr::mutate(., Xi = ((Vx+200)/Vx)*Xt) %&gt;% dplyr::select(., Mi) %&gt;% dplyr::mutate(., Mi = Mi*1000) %&gt;% pull() return(df_out) } nitpic_itcdata.nit &lt;- nitpiclist_itc.all %&gt;% dplyr::filter(., datatype_corr == &quot;nitpic&quot;) %&gt;% dplyr::mutate(., nitpic = str_detect(dataname, &quot;\\\\.nitpic&quot;)) %&gt;% dplyr::filter(., nitpic == &quot;TRUE&quot;) %&gt;% separate(., dataname, into = c(&quot;ntf2_type&quot;, &quot;PH&quot;, &quot;ligand&quot;, &quot;lig_type&quot;, &quot;datasetid&quot;, &quot;cconc&quot;, &quot;sconc&quot;), sep = &quot;_&quot;, remove = FALSE) %&gt;% dplyr::select(-cconc, -sconc) %&gt;% dplyr::mutate(., grepvalue = paste(&quot;grep -A 10000 CORRECTED &quot;, value, &quot;| grep -v INJECTION | grep -v CORRECT&quot;, sep = &quot;&quot;), injections = paste(&quot;grep -A 10000 CORRECTED &quot;, value, &quot; | grep -A 1 -B 1 INJECTION | grep -v INJECTION | grep [[:digit:]]&quot;, sep = &quot;&quot;), colnames = list(c(&quot;time&quot;, &quot;heat&quot;))) %&gt;% dplyr::mutate(., data = purrr::pmap(list(grepvalue, colnames),vroom_pipe_f), injectionslist = purrr::pmap(list(injections, colnames),vroom_pipe_f)) nitpic_itcdata_cellconc.nit &lt;- nitpic_itcdata.nit %&gt;% dplyr::select(., !c(&quot;grepvalue&quot;, &quot;injections&quot;)) %&gt;% dplyr::mutate(., grepvalue = paste(&quot;grep -A 30 DH &quot;, value, &quot; | grep -B 30 BEGIN&quot;, sep = &quot;&quot;)) %&gt;% dplyr::mutate(., data_nitfit_temp = purrr::pmap(list(grepvalue),vroom_pipe_basic_f)) %&gt;% dplyr::mutate(., data_nitfit = purrr::map(data_nitfit_temp, ~change_nitpic_dH_f(.))) %&gt;% dplyr::mutate(., nit_conc = purrr::map(data_nitfit, ~extract_itcconcentrations_f(.))) %&gt;% dplyr::select(., dataname, nit_conc) %&gt;% unnest(., nit_conc) nitpic_itcdata_injections.nit &lt;- nitpic_itcdata.nit %&gt;% dplyr::select(., !c(&quot;subfolder&quot;, &quot;datatype_corr&quot;, &quot;nitpic&quot;)) %&gt;% dplyr::mutate(., injectionslistid = purrr::pmap(list(injectionslist, data), addinjectionnumbers_f)) ##&quot; script includes some case_when pipes to generate groups for plotting plotgroup_tribble &lt;- nitpic_itcdata_injections.nit %&gt;% dplyr::mutate(., datasetid = str_extract(datasetid, &quot;[:digit:]&quot;)) %&gt;% dplyr::select(., ntf2_type, PH, ligand, lig_type_corr = lig_type, datasetid, data, injectionslistid) %&gt;% dplyr::mutate(., folder = paste(ntf2_type, PH, ligand, lig_type_corr, sep = &quot;_&quot;)) %&gt;% dplyr::mutate(., plotgroup = case_when(ntf2_type == &quot;NTF2WT&quot; &amp; lig_type_corr == &quot;WT&quot; &amp; PH == &quot;PH75&quot; ~ &quot;G0_MUT0&quot;, ntf2_type == &quot;NTF2WT&quot; &amp; ligand == &quot;CAP&quot; &amp; lig_type_corr == &quot;L9A&quot; &amp; PH == &quot;PH75&quot; ~ &quot;G0_MUT2&quot;,ntf2_type == &quot;NTF2WT&quot; &amp; ligand == &quot;CAP&quot; &amp; lig_type_corr == &quot;F3AL9A&quot; &amp; PH == &quot;PH75&quot; ~ &quot;G0_MUT1&quot;,ntf2_type == &quot;NTF2WT&quot; &amp; ligand == &quot;USP&quot; &amp; lig_type_corr == &quot;F3AF6A&quot; &amp; PH == &quot;PH75&quot; ~ &quot;G0_MUT1&quot;,ntf2_type == &quot;H31A&quot; &amp; lig_type_corr == &quot;WT&quot; &amp; PH == &quot;PH75&quot; ~ &quot;G1_MUT0&quot;, ntf2_type == &quot;NTF2YY&quot; &amp; lig_type_corr == &quot;WT&quot; &amp; PH == &quot;PH75&quot; ~ &quot;G2_MUT0&quot;, ntf2_type == &quot;NTF2WT&quot; &amp; PH == &quot;PH56&quot; ~ &quot;G3_MUT0&quot;)) %&gt;% separate(., plotgroup, into = c(&quot;plotgroup1&quot;, &quot;plotgroup2&quot;), sep = &quot;_&quot;, remove = FALSE) %&gt;% dplyr::mutate(., datasetidname = paste(folder, datasetid, sep = &quot;_&quot;)) %&gt;% dplyr::mutate(., datasetid = as.integer(datasetid)) nitpic_itcdata_nit_mod.tib &lt;- nitpic_itcdata_injections.nit %&gt;% dplyr::mutate(., datasetid = str_extract(datasetid, &quot;[:digit:]&quot;)) %&gt;% dplyr::mutate(., datasetid = as.integer(datasetid)) %&gt;% dplyr::select(., dataname, ntf2_type, PH, ligand, lig_type_corr = lig_type, datasetid, data, injectionslistid) %&gt;% dplyr::mutate(., folder = paste(ntf2_type, PH, ligand, lig_type_corr, sep = &quot;_&quot;)) %&gt;% left_join(., plotgroup_tribble) %&gt;% dplyr::mutate(., filtertime = case_when(datasetidname == &quot;NTF2WT_PH56_USP_WT_2&quot; ~ 2400, TRUE ~ 3600)) %&gt;% dplyr::mutate(., data_filtered = purrr::pmap(list(data, filtertime), filter_time_f)) nitpic_itcdata_confvalues.tib &lt;- nitpiclist_itc.all %&gt;% dplyr::filter(., datatype_corr == &quot;confidence&quot;) %&gt;% dplyr::mutate(., data = purrr::map(value, ~vroom(., delim = &quot; &quot;))) %&gt;% unnest(., data) %&gt;% dplyr::select(., !c(&quot;value&quot;, &quot;datatype_corr&quot;)) %&gt;% separate(., &quot;DATASET&quot;, into = c(&quot;folder&quot;, &quot;dropme&quot;), sep = &quot;\\\\.&quot;) %&gt;% dplyr::select(., !c(&quot;dropme&quot;)) %&gt;% separate(., folder, into = c(&quot;ntf2_type&quot;, &quot;PH&quot;, &quot;ligand&quot;, &quot;lig_type_corr&quot;), sep = &quot;_&quot;, remove = FALSE) %&gt;% dplyr::mutate(., KD = 10^(-KA+9),KDmin = 10^(-KAmin+9),KDmax = 10^(-KAmax+9)) %&gt;% dplyr::mutate(., Hsigma = (((dH-dHmin)^2+(dH-dHmax)^2)/2)^0.5, Ksigma = (((KD-KDmin)^2+(KD-KDmax)^2)/2)^0.5) nitpic_itcdata_confvalues_sel.tib &lt;- nitpic_itcdata_confvalues.tib %&gt;% dplyr::select(., c(&quot;folder&quot;, &quot;ntf2_type&quot;, &quot;PH&quot;, &quot;ligand&quot;, &quot;lig_type_corr&quot;, &quot;KD&quot;, &quot;Ksigma&quot;, &quot;dH&quot;, &quot;Hsigma&quot;)) 3.2 ITC thermograms nitpic_itcdata_nit_preplot.tib &lt;- nitpic_itcdata_nit_mod.tib %&gt;% left_join(., nitpic_itcdata_cellconc.nit) %&gt;% dplyr::select(., -data, -injectionslistid) %&gt;% dplyr::group_by(., ligand, plotgroup, nit_conc) %&gt;% dplyr::mutate(., datasetid2 = row_number(plotgroup1)) %&gt;% unnest(., data_filtered) nitpic_itcdata_nit_plot &lt;- nitpic_itcdata_nit_preplot.tib %&gt;% ggplot(aes(x = time, y = heat, group = datasetidname, colour = factor(plotgroup2))) + #geom_line(aes(colour = factor(MLfitcorr))) + #geom_point() + geom_line(size=0.4) + scale_color_aaas() + theme_light() + scale_x_continuous(&quot;time: min&quot;, breaks = c(0, 1800, 3600), labels = function(breaks) ((breaks/60))) + scale_y_continuous(&quot;observed heat: ucal/s&quot;) + #coord_cartesian(ylim = c(-0.8, 0.1)) + theme(legend.position=&quot;none&quot;) + facet_grid(plotgroup1+nit_conc ~ ligand+plotgroup2+datasetid2, scales = &quot;free_y&quot;) ggsave(&quot;./itc_nitpic_ggplot.jpeg&quot;, nitpic_itcdata_nit_plot, device = &quot;jpeg&quot;, width = 150, height = 120, units = c(&quot;mm&quot;)) ggsave(&quot;./itc_nitpic_ggplot.ps&quot;, nitpic_itcdata_nit_plot, device = &quot;ps&quot;, width = 150, height = 120, units = c(&quot;mm&quot;)) #print(nitpic_itcdata_nit_plot) theme_light_arial &lt;- function(){ font &lt;- &quot;Arial&quot; theme_light() %+replace% theme(text = element_text(size = rel(1.5))) } modify_plot_panel_order &lt;- tribble(~ligand, ~plotgroup1, ~plotgroup2, ~datasetid2, ~nit_conc, ~panelid, ~concid, &quot;CAP&quot;, &quot;G0&quot;, &quot;MUT0&quot;, 1, 20, 1, 1, &quot;CAP&quot;, &quot;G0&quot;, &quot;MUT0&quot;, 1, 25, 1, 2, &quot;CAP&quot;, &quot;G0&quot;, &quot;MUT0&quot;, 2, 25, 2, 1, &quot;CAP&quot;, &quot;G0&quot;, &quot;MUT0&quot;, 3, 25, 2, 2, &quot;CAP&quot;, &quot;G0&quot;, &quot;MUT1&quot;, 1, 25, 1, 3, &quot;CAP&quot;, &quot;G0&quot;, &quot;MUT2&quot;, 1, 25, 2, 3, &quot;CAP&quot;, &quot;G1&quot;, &quot;MUT0&quot;, 1, 20, 1, 1, &quot;CAP&quot;, &quot;G1&quot;, &quot;MUT0&quot;, 2, 20, 1, 2, &quot;CAP&quot;, &quot;G2&quot;, &quot;MUT0&quot;, 1, 7, 1, 1, &quot;CAP&quot;, &quot;G2&quot;, &quot;MUT0&quot;, 1, 10, 1, 2, &quot;CAP&quot;, &quot;G3&quot;, &quot;MUT0&quot;, 1, 12.5, 1, 1, &quot;CAP&quot;, &quot;G3&quot;, &quot;MUT0&quot;, 2, 12.5, 1, 2, &quot;CAP&quot;, &quot;G3&quot;, &quot;MUT0&quot;, 3, 12.5, 1, 3, &quot;USP&quot;, &quot;G0&quot;, &quot;MUT0&quot;, 1, 25, 1, 1, &quot;USP&quot;, &quot;G0&quot;, &quot;MUT0&quot;, 2, 25, 2, 1, &quot;USP&quot;, &quot;G0&quot;, &quot;MUT0&quot;, 3, 25, 2, 2, &quot;USP&quot;, &quot;G0&quot;, &quot;MUT1&quot;, 1, 25, 1, 2, &quot;USP&quot;, &quot;G1&quot;, &quot;MUT0&quot;, 1, 20, 1, 1, &quot;USP&quot;, &quot;G1&quot;, &quot;MUT0&quot;, 2, 20, 1, 2, &quot;USP&quot;, &quot;G2&quot;, &quot;MUT0&quot;, 1, 15, 1, 1, &quot;USP&quot;, &quot;G2&quot;, &quot;MUT0&quot;, 2, 15, 1, 2, &quot;USP&quot;, &quot;G3&quot;, &quot;MUT0&quot;, 1, 12.5, 1, 1, &quot;USP&quot;, &quot;G3&quot;, &quot;MUT0&quot;, 2, 12.5, 1, 2) nitpic_itcdata_nit_plot2 &lt;- nitpic_itcdata_nit_preplot.tib %&gt;% left_join(., modify_plot_panel_order) %&gt;% ggplot(aes(x = time, y = heat, group = datasetidname, colour = factor(plotgroup2))) + #geom_line(aes(colour = factor(MLfitcorr))) + #geom_point() + geom_line(size=0.4) + scale_color_aaas() + theme_light_arial() + scale_x_continuous(&quot;time: min&quot;, breaks = c(0, 1800, 3600), labels = function(breaks) ((breaks/60))) + scale_y_continuous(&quot;observed heat: ucal/s&quot;, breaks = c(0,-0.25, -0.5, -0.75), minor_breaks = NULL) + coord_cartesian(xlim = c(0, 3600)) + theme(legend.position=&quot;none&quot;, axis.text = element_text(size = rel(0.5))) + facet_grid(plotgroup1+panelid ~ ligand+concid, scales = &quot;free_y&quot;) print(nitpic_itcdata_nit_plot2) ggsave(&quot;./itc_nitpic_ggplot2.jpeg&quot;, nitpic_itcdata_nit_plot2, device = &quot;jpeg&quot;, width = 150, height = 120, units = c(&quot;mm&quot;)) ggsave(&quot;./itc_nitpic_ggplot2.ps&quot;, nitpic_itcdata_nit_plot2, device = &quot;ps&quot;, width = 150, height = 120, units = c(&quot;mm&quot;)) ITC thermograms, shown as Supplementary Figure S4A in ms. G0: NTF2-WT at pH 7.4, G1: H31A at pH 7.4, G2: H31YH62Y at pH 7.4, G3: NTF2-WT at pH 5.6.Not shown in manuscript. 3.3 Global sedphat fit plots import_sedfit_f &lt;- function(filename){ out &lt;- vroom(filename, col_names = c(&quot;MX&quot;, &quot;NDH&quot;)) return(out) } baseline_fix_f &lt;- function(df){ df_out &lt;- df %&gt;% vroom(., col_names = c(&quot;exp&quot;, &quot;base&quot;)) %&gt;% dplyr::mutate(., datasetid = paste(&quot;exp0&quot;, exp, sep =&quot;&quot;)) %&gt;% dplyr::select(datasetid, base) return(df_out) } seddata_base_f &lt;- function(df, base){ df_out &lt;- df %&gt;% dplyr::mutate(., NDHbase = NDH - base) return(df_out) } combine_data_error_fit_f &lt;- function(data, error, fit){ data_out &lt;- data %&gt;% dplyr::select(., MXd = MX, NDHd = NDH) error_out &lt;- error %&gt;% dplyr::select(., NDHp = MX, NDHm = NDH) fit_out &lt;- fit %&gt;% dplyr::select(., MXf = MX, NDHf = NDH) df_out &lt;- data_out %&gt;% add_column(., error_out) %&gt;% add_column(., fit_out) return(df_out) } sedlist_itc_txt &lt;- nitpiclist_itc.all %&gt;% separate(., value, into = c(&quot;toptop&quot;, &quot;topfolder&quot;, &quot;dataname&quot;, &quot;datatype&quot;), sep = &quot;/&quot;, remove = FALSE) %&gt;% separate(., dataname, c(&quot;ntf2_type&quot;, &quot;PH&quot;, &quot;ligand&quot;, &quot;lig_type0&quot;), sep = &quot;_&quot;, remove = FALSE) %&gt;% separate(., lig_type0, into = c(&quot;lig_type&quot;, &quot;xls&quot;), sep = &quot;\\\\.&quot;) %&gt;% dplyr::filter(., datatype_corr == &quot;data.txt&quot; | datatype_corr == &quot;error.txt&quot; | datatype_corr == &quot;fit.txt&quot;) %&gt;% dplyr::mutate(., datasetid = str_extract(datatype, &quot;exp[:digit:][:digit:]&quot;)) sedlist_itc_txt_fit.tib &lt;- sedlist_itc_txt %&gt;% dplyr::mutate(., seddata = purrr::pmap(list(value), import_sedfit_f)) %&gt;% dplyr::select(., ntf2_type, PH, ligand, lig_type, datatype_corr, datasetid, seddata) %&gt;% dplyr::mutate(., datatype_wide = str_extract(datatype_corr, &quot;data|error|fit&quot;)) %&gt;% dplyr::select(., !c(&quot;datatype_corr&quot;)) %&gt;% pivot_wider(., names_from = c(&quot;datatype_wide&quot;), values_from = c(&quot;seddata&quot;)) %&gt;% dplyr::mutate(., seddata = purrr::pmap(list(data, error, fit), combine_data_error_fit_f) ) %&gt;% dplyr::select(., !c(&quot;data&quot;, &quot;error&quot;, &quot;fit&quot;)) %&gt;% dplyr::mutate(., datasetid = str_extract(datasetid, &quot;1|2&quot;)) %&gt;% dplyr::mutate_at(., c(&quot;datasetid&quot;), as.integer) sedlist_itcdata.tib &lt;- nitpiclist_itc.all %&gt;% dplyr::filter(., datatype_corr == &quot;xls&quot;) %&gt;% dplyr::mutate(., oldxls = str_detect(value, &quot;oldxls&quot;)) %&gt;% dplyr::filter(., oldxls == &quot;FALSE&quot;) %&gt;% separate(., value, into = c(&quot;toptopfolger&quot;, &quot;topfolder&quot;, &quot;sedfolder&quot;, &quot;dataname&quot;), sep = &quot;/&quot;, remove = FALSE) %&gt;% separate(., dataname, into = c(&quot;ntf2_type&quot;, &quot;PH&quot;, &quot;ligand&quot;, &quot;lig_type0&quot;), sep = &quot;_&quot;, remove = FALSE) %&gt;% dplyr::select(., !c(&quot;datatype_corr&quot;, &quot;oldxls&quot;)) %&gt;% separate(., lig_type0, into = c(&quot;lig_type&quot;, &quot;xls&quot;), sep = &quot;\\\\.&quot;) seq_along_c &lt;- function(number){ out &lt;- c(seq_len(number)) %&gt;% as_tibble(.) } sedphat_columns &lt;- tribble(~folder, ~datasets, ~joinme, ~glycerol, &quot;H31A_PH75_USP_WT&quot;, 2, &quot;sedphat&quot;, &quot;GLYC&quot;, &quot;NTF2WT_PH75_USP_WT&quot;, 3, &quot;sedphat&quot;, &quot;GLYC&quot;, &quot;NTF2WT_PH75_CAP_WT&quot;, 4, &quot;sedphat&quot;, &quot;GLYC&quot;, &quot;NTF2WT_PH56_USP_WT&quot;, 2, &quot;sedphat&quot;, &quot;GLYC&quot;, &quot;NTF2WT_PH56_CAP_WT&quot;, 3, &quot;sedphat&quot;, &quot;GLYC&quot;, &quot;H31A_PH75_CAP_WT&quot;, 2, &quot;sedphat&quot;, &quot;GLYC&quot;, &quot;NTF2WT_PH75_CAP_F3AL9A&quot;, 1, &quot;sedphat&quot;, &quot;GLYC&quot;, &quot;NTF2WT_PH75_CAP_L9A&quot;, 1, &quot;sedphat&quot;, &quot;GLYC&quot;, &quot;NTF2WT_PH75_USP_F3AF6A&quot;, 1, &quot;sedphat&quot;, &quot;GLYC&quot;, ) sedphat_coladd &lt;- tribble(~joinme, ~range, ~colnames, &quot;sedphat&quot;, &quot;A2:F30&quot;, c(&quot;MXd&quot;, &quot;NDHd&quot;, &quot;NDHp&quot;, &quot;NDHm&quot;, &quot;MXf&quot;, &quot;NDHf&quot;)) sedphat_columns &lt;- sedphat_columns %&gt;% dplyr::mutate(., datasets_seq = purrr::map(datasets, ~seq_along_c(.))) %&gt;% unnest(., cols = &quot;datasets_seq&quot;) %&gt;% left_join(., sedphat_coladd) %&gt;% dplyr::select(., folder, datasetid = value, range, colnames) sedlist_itcdata_sedphat_fit.tib &lt;- sedlist_itcdata.tib %&gt;% dplyr::mutate(., folder = paste(ntf2_type, PH, ligand, lig_type, sep = &quot;_&quot;)) %&gt;% left_join(., sedphat_columns) %&gt;% dplyr::mutate(., seddata = purrr::pmap(list(value, datasetid, range, colnames), read_xls)) sedlist_itcdata_sedphat_fit_all &lt;- sedlist_itcdata_sedphat_fit.tib %&gt;% dplyr::select(., ntf2_type, PH, ligand, lig_type, datasetid, seddata) %&gt;% full_join(., sedlist_itc_txt_fit.tib) sedlist_itcdata_sedphat_fit_preplot.tib &lt;- sedlist_itcdata_sedphat_fit_all %&gt;% dplyr::select(., ntf2_type, PH, ligand, lig_type_corr = lig_type, datasetid, seddata) %&gt;% left_join(., plotgroup_tribble) %&gt;% unnest(., seddata) sedlist_itcdata_sedphat_fit_plot &lt;- sedlist_itcdata_sedphat_fit_preplot.tib %&gt;% ggplot() + #geom_line(aes(colour = factor(MLfitcorr))) + geom_point(aes(x = MXd, y = NDHd, group = datasetidname, colour = plotgroup2, shape = factor(datasetid)), size = 0.7) + scale_shape_manual(values=c(0, 1, 2, 5)) + #geom_pointrange(aes(x = MXd, ymin=NDHm, ymax=NDHp)) + geom_line(aes(x = MXd, y = NDHf, group = datasetidname, colour = plotgroup2), size = 0.5 ) + scale_color_aaas() + theme_light() + scale_x_continuous(&quot;molar ratio&quot;, minor_breaks = NULL, breaks = c(0, 1, 2, 3)) + coord_cartesian(xlim = c(0, 3)) + scale_y_continuous(&quot;DQ: kcal/mol&quot;, labels = function(breaks) ((breaks*10^-3)) ) + theme(legend.position=&quot;none&quot;, ) + facet_grid(plotgroup1 ~ ligand) print(sedlist_itcdata_sedphat_fit_plot) ggsave(&quot;./itc_sedfit_ggplot.jpeg&quot;, sedlist_itcdata_sedphat_fit_plot, device = &quot;jpeg&quot;, width = 100, height = 150, units = c(&quot;mm&quot;)) ggsave(&quot;./itc_sedfit_ggplot.ps&quot;, sedlist_itcdata_sedphat_fit_plot, device = &quot;ps&quot;, width = 100, height = 150, units = c(&quot;mm&quot;)) ITC binding isotherms. Used for Figures 2 and 4 in ms. G0: NTF2-WT at pH 7.4, G1: H31A at pH 7.4, G2: H31YH62Y at pH 7.4, G3: NTF2-WT at pH 5.6.Not shown in manuscript. 3.4 2D error surface Fit error contour map was obtained by F-statistics as implemented in Sedphat. sedlist_2Derror.tib &lt;- nitpiclist_itc.all %&gt;% dplyr::filter(., datatype_corr == &quot;dHvsKab&quot;) %&gt;% dplyr::mutate(., colnames = list(c(&quot;logK&quot;, &quot;dH&quot;, &quot;chisq&quot;))) %&gt;% separate(., value, into = c(&quot;toptopfolger&quot;, &quot;topfolder&quot;, &quot;sedfolder&quot;, &quot;dataname&quot;), sep = &quot;/&quot;, remove = FALSE) %&gt;% separate(., dataname, into = c(&quot;ntf2_type&quot;, &quot;PH&quot;, &quot;ligand&quot;, &quot;lig_type0&quot;), sep = &quot;_&quot;, remove = FALSE) %&gt;% separate(., lig_type0, into = c(&quot;lig_type&quot;, &quot;else&quot;), sep = &quot;\\\\.&quot;) %&gt;% dplyr::select(., !c(&quot;else&quot;)) read_delim_error_f &lt;- function(value, colnames){ out &lt;- read_delim(value, delim= &quot; &quot;, col_names = colnames) } sedlist_2Derror_sedphat.tib &lt;- sedlist_2Derror.tib %&gt;% dplyr::mutate(., folder = paste(ntf2_type, PH, ligand, lig_type, sep = &quot;_&quot;)) %&gt;% dplyr::mutate(., errordata = purrr::pmap(list(value, colnames), read_delim_error_f)) kde3d_purrr_f &lt;- function(df){ kernel &lt;- kde3d(df$logK, df$dHpos, df$chinormlevel, n = 1000, lims = c(range(df$logK), range(df$dHpos), range(df$chinormlevel))) out &lt;- as_tibble(kernel) %&gt;% colnames(., ) return(out) } #note the critical chi-values from the fits sedlist_2Derror_sedphat_chicritical &lt;- tribble(~folder, ~crichi, ~crifac, &quot;NTF2WT_PH75_USP_WT&quot;, 2.7, 1.33, #20210818 25/210 // 210 // 380 &quot;H31A_PH75_USP_WT&quot;, 0.15, 1.33, #1.05, #20210730 &quot;NTF2WT_PH75_CAP_WT&quot;, 4.1, 1.33, #1.03, #20210805 25/241.5 // 243 // 195 // 320 &quot;NTF2WT_PH56_USP_WT&quot;, 1.04, 1.33, #1.05, #20210730 &quot;NTF2WT_PH56_CAP_WT&quot;, 4.2, 1.33, #1.03, #20210805 12.5/480 // 12.5/215 // 12.5//215 &quot;H31A_PH75_CAP_WT&quot;, 0.65, 1.33, #1.06, #20210730 &quot;NTF2WT_PH75_CAP_L9A&quot;, 2.02, 1.33, #1.179, &quot;NTF2YY_PH75_CAP_WT&quot;, 2.2, 1.33, #1.05, &quot;NTF2YY_PH75_USP_WT&quot;, 6.1, 1.33) #1.15) sedlist_2Derror_sedphat_preplot &lt;- sedlist_2Derror_sedphat.tib %&gt;% left_join(., plotgroup_tribble) %&gt;% dplyr::mutate(., errordata_corr = purrr::map(errordata, ~dplyr::filter(., chisq &gt; 0))) %&gt;% left_join(., sedlist_2Derror_sedphat_chicritical) %&gt;% dplyr::select(., -errordata) %&gt;% unnest(., cols = c(&quot;errordata_corr&quot;)) %&gt;% dplyr::group_by(., folder) %&gt;% dplyr::mutate(., chinorm = (chisq/min(chisq) )) %&gt;% dplyr::mutate(., chinormlevel = (1-(chisq-min(chisq))/(max(chisq)-min(chisq))) ) %&gt;% dplyr::mutate(., logKd = 10^(-1*logK)) error_colors &lt;- rev(brewer.pal(n = 5, name = &quot;RdYlBu&quot;)) sedlist_2Derror_sedphat_preplot_vline &lt;- sedlist_2Derror_sedphat_preplot %&gt;% dplyr::filter(., plotgroup2 == &quot;MUT0&quot;) %&gt;% group_by(., folder) %&gt;% dplyr::summarize(., Kdvalue = logKd[which(chisq == min(chisq))], dHvalue = dH[which(chisq == min(chisq))]) #print(sedlist_2Derror_sedphat_plot) sedlist_2Derror_sedphat_plot &lt;- sedlist_2Derror_sedphat_preplot %&gt;% dplyr::filter(., plotgroup2 == &quot;MUT0&quot;) %&gt;% left_join(., sedlist_2Derror_sedphat_preplot_vline) %&gt;% ggplot(., aes(x = logKd, y = dH, fill = chinorm)) + geom_raster() + geom_vline(aes(xintercept = Kdvalue), size = 0.2) + geom_hline(aes(yintercept = dHvalue), size = 0.2) + #geom_mark_ellipse(data = . %&gt;% dplyr::filter(., chinorm &lt; crifac), expand = 0.0, tol = 0.5, n = 200, size = 0.2) + theme_light() + scale_x_log10(&quot;Kd: uM&quot;, breaks = c(0.1*10^-6, 1*10^-6, 10*10^-6), labels = function(breaks) ((breaks*10^6)) ) + scale_y_continuous(&quot;DH: kcal/mol&quot;) + coord_cartesian(xlim = c(0.1*10^-6, 50*10^-6), ylim = c(-25, -10)) + #scale_fill_gradientn(colours = c(&quot;cyan&quot;, &quot;black&quot;, &quot;red&quot;),) #scale_fill_gradientn(colors = error_colors, values = scales::rescale(c(1, 1.1, 1.2, 1.5, 2.5)), space = &quot;Lab&quot;) + scale_fill_gradientn(colors = error_colors, limits = c(1,2.5), values = scales::rescale(c(1, 1.1, 1.2, 1.5, 2.5)), space = &quot;Lab&quot;) + #scale_fill_gradientn(colors = c(&quot;blue&quot;, &quot;yellow&quot;, &quot;red&quot;), breaks= c(1, 1.2, 1.5)) + facet_grid(plotgroup1 ~ ligand) print(sedlist_2Derror_sedphat_plot) ggsave(&quot;./itc_2Derror_ggplot.jpeg&quot;, sedlist_2Derror_sedphat_plot, device = &quot;jpeg&quot;, width = 75, height = 75, units = c(&quot;mm&quot;)) ggsave(&quot;./itc_2Derror_ggplot.ps&quot;, sedlist_2Derror_sedphat_plot, device = &quot;ps&quot;, width = 75, height = 75, units = c(&quot;mm&quot;)) Error surfaces as obtained from F-statistics as implemented in Sedphat. G0: NTF2-WT at pH 7.4, G1: H31A at pH 7.4, G2: H31YH62Y at pH 7.4, G3: NTF2-WT at pH 5.6.Not shown in manuscript. 3.5 Comparison of dH and Kd values obtained for the ITC datasets sedlist_KDerror_sedphat_preplot &lt;- sedlist_2Derror_sedphat_preplot %&gt;% dplyr::filter(., plotgroup2 == &quot;MUT0&quot;, chinorm &lt; (crifac+0.01)) %&gt;% ungroup() %&gt;% dplyr::group_by(., folder, ligand, plotgroup1, lig_type_corr) %&gt;% dplyr::summarize(., Kdmin = min(logKd), Kdmax = max(logKd), Kdvalue = logKd[which(chinorm == min(chinorm))] ) %&gt;% distinct(., folder, .keep_all = TRUE) sedlist_KDerror_sedphat_plot &lt;- sedlist_KDerror_sedphat_preplot %&gt;% ggplot(., aes(x = Kdvalue, y = reorder(plotgroup1, desc(plotgroup1)), colour = factor(lig_type_corr))) + geom_point(size = 1) + geom_crossbar(aes(xmin = Kdmin, xmax = Kdmax), size = 0.5, fatten = 1) + #geom_mark_ellipse(data = . %&gt;% dplyr::filter(., chinorm &lt; crifac), expand = 0.0, tol = 0.5, n = 200, size = 0.2) + theme_light() + scale_x_log10(&quot;Kd: uM&quot;, breaks = c(0.1*10^-6, 1*10^-6, 10*10^-6), labels = function(breaks) ((breaks*10^6)) ) + #scale_y_continuous(&quot;DH: kcal/mol&quot;) + scale_y_discrete(name = NULL) + coord_cartesian(xlim = c(0.1*10^-6, 25*10^-6)) + #scale_fill_gradientn(colours = c(&quot;cyan&quot;, &quot;black&quot;, &quot;red&quot;),) #scale_fill_gradientn(colors = error_colors, values = scales::rescale(c(1, 1.1, 1.2, 1.5, 2.5)), space = &quot;Lab&quot;) + #scale_colour_gradientn(colors = error_colors, limits = c(1,2.5), values = scales::rescale(c(1, 1.1, 1.2, 1.5, 2.5)), space = &quot;Lab&quot;) + # scale_color_grey(end = 0.5) + scale_color_aaas() + theme(legend.position = &quot;none&quot;) + #scale_fill_gradientn(colors = c(&quot;blue&quot;, &quot;yellow&quot;, &quot;red&quot;), breaks= c(1, 1.2, 1.5)) + facet_grid(ligand ~ .) ggsave(&quot;./itc_KDerror_ggplot.jpeg&quot;, sedlist_KDerror_sedphat_plot, device = &quot;jpeg&quot;, width = 70, height = 45, units = c(&quot;mm&quot;)) ggsave(&quot;./itc_KDerror_ggplot.ps&quot;, sedlist_KDerror_sedphat_plot, device = &quot;ps&quot;, width = 70, height = 45, units = c(&quot;mm&quot;)) #print(sedlist_KDerror_sedphat_plot) sedlist_dHerror_sedphat_plot &lt;- sedlist_2Derror_sedphat_preplot %&gt;% dplyr::filter(., plotgroup2 == &quot;MUT0&quot;, chinorm &lt; (crifac+0.01)) %&gt;% ungroup() %&gt;% dplyr::group_by(., folder, ligand, plotgroup1, lig_type_corr) %&gt;% dplyr::summarize(., dHmin = min(dH), dHmax = max(dH), dHvalue = dH[which(chinorm == min(chinorm))] ) %&gt;% ggplot(., aes(x = dHvalue, y = reorder(plotgroup1, desc(plotgroup1)), colour = factor(lig_type_corr))) + geom_point(size = 1) + geom_crossbar(aes(xmin = dHmin, xmax = dHmax), size = 0.5, fatten = 1) + #geom_mark_ellipse(data = . %&gt;% dplyr::filter(., chinorm &lt; crifac), expand = 0.0, tol = 0.5, n = 200, size = 0.2) + theme_light() + #scale_x_log10(&quot;Kd: uM&quot;, breaks = c(0.1*10^-6, 1*10^-6, 10*10^-6), labels = function(breaks) ((breaks*10^6)) ) + scale_x_continuous(&quot;DH: kcal/mol&quot;, n.breaks = 3) + scale_y_discrete(name = NULL) + coord_cartesian(xlim = c(-25, 0)) + #scale_fill_gradientn(colours = c(&quot;cyan&quot;, &quot;black&quot;, &quot;red&quot;),) #scale_fill_gradientn(colors = error_colors, values = scales::rescale(c(1, 1.1, 1.2, 1.5, 2.5)), space = &quot;Lab&quot;) + #scale_colour_gradientn(colors = error_colors, limits = c(1,2.5), values = scales::rescale(c(1, 1.1, 1.2, 1.5, 2.5)), space = &quot;Lab&quot;) + scale_color_aaas() + theme(legend.position = &quot;none&quot;) + #scale_color_grey(end = 0.5) + #scale_fill_gradientn(colors = c(&quot;blue&quot;, &quot;yellow&quot;, &quot;red&quot;), breaks= c(1, 1.2, 1.5)) + facet_grid(ligand ~ .) print(sedlist_dHerror_sedphat_plot) ggsave(&quot;./itc_dHerror_ggplot.jpeg&quot;, sedlist_dHerror_sedphat_plot, device = &quot;jpeg&quot;, width = 70, height = 45, units = c(&quot;mm&quot;)) ggsave(&quot;./itc_dHerror_ggplot.ps&quot;, sedlist_dHerror_sedphat_plot, device = &quot;ps&quot;, width = 70, height = 45, units = c(&quot;mm&quot;)) Comparison of dH values with error. Low pH descreases and increases the enthalpy for Caprin-1 and USP10 binding. We have not discussed this in the manuscript, but this may support further support that G0: NTF2-WT at pH 7.4, G1: H31A at pH 7.4, G2: H31YH62Y at pH 7.4, G3: NTF2-WT at pH 5.6.Not shown in manuscript. 4 Comparison to BLI and nanoDSF 4.1 Comparison of affinities obtained from ITC, BLI and nanoDSF. Comparison of affinites which was not shown in the manuscript. octet_import = list.files(path = &quot;./data_octet&quot;, pattern = &quot;*&quot;, recursive = TRUE, include.dirs = TRUE, full.names = TRUE) octet_import.tib &lt;- as_tibble(octet_import) octet_import.all &lt;- octet_import.tib %&gt;% dplyr::mutate(., data = purrr::map(value, ~vroom(.))) %&gt;% unnest(., data) %&gt;% dplyr::select(., !c(&quot;value&quot;)) octet_ec50_values &lt;- octet_import.all %&gt;% dplyr::filter(., hill_term == &quot;EC50&quot;) %&gt;% dplyr::mutate(., value = str_replace(hill_stats_value, &quot;,&quot;, &quot;\\\\.&quot;)) %&gt;% dplyr::mutate_at(., c(&quot;value&quot;), ~as.numeric(.)) %&gt;% dplyr::mutate(., value = value*10^-9) %&gt;% dplyr::filter(., hill_stats == &quot;estimate&quot; |hill_stats == &quot;std.error&quot;) %&gt;% dplyr::select(., !c(&quot;hill_stats_value&quot;)) %&gt;% pivot_wider(., names_from = c(&quot;hill_stats&quot;), values_from = c(&quot;value&quot;)) %&gt;% dplyr::mutate(., value = estimate, value_max = estimate + std.error, value_min = estimate - std.error) %&gt;% dplyr::select(., ligand = rec, contains(&quot;value&quot;)) %&gt;% dplyr::mutate(., type = &quot;octet&quot;, color = &quot;blue&quot;) itc_kd_values &lt;- sedlist_2Derror_sedphat_preplot %&gt;% dplyr::filter(., plotgroup2 == &quot;MUT0&quot;, chinorm &lt; (crifac+0.01)) %&gt;% ungroup() %&gt;% dplyr::group_by(., folder, ligand, plotgroup1, lig_type_corr) %&gt;% dplyr::summarize(., Kdmin = min(logKd), Kdmax = max(logKd), Kdvalue = logKd[which(chinorm == min(chinorm))] ) %&gt;% distinct(., folder, .keep_all = TRUE) %&gt;% ungroup() %&gt;% dplyr::filter(., plotgroup1 == &quot;G0&quot;) %&gt;% dplyr::select(., ligand, value=Kdvalue, value_max=Kdmax, value_min = Kdmin) %&gt;% dplyr::mutate(., type = &quot;itc&quot;, color = &quot;blue&quot;) itc_octet_colors &lt;- tribble(~name, ~value, &quot;itc&quot;, &quot;#252e5c&quot;, &quot;octet&quot;, &quot;#5c6cbd&quot;) itc_octet_colors &lt;- itc_octet_colors %&gt;% deframe() #itc_octet_colors &lt;- as_tibble(pal_aaas()(1)) %&gt;% add_row(., value = &quot;#5c6cbd&quot;) %&gt;% add_column(., name = c(&quot;itc&quot;, &quot;octet&quot;)) %&gt;% dplyr::select(., name, color = value) %&gt;% dplyr::select(., value = name, vame = color) %&gt;% deframe() itc_octet_comp_plot &lt;- itc_kd_values %&gt;% full_join(., octet_ec50_values) %&gt;% ggplot(., aes(x = value, y = reorder(ligand, desc(ligand)), colour = factor(type))) + geom_point(size = 3) + geom_crossbar(aes(xmin = value_min, xmax = value_max), size = 0.3, fatten = 1) + #geom_mark_ellipse(data = . %&gt;% dplyr::filter(., chinorm &lt; crifac), expand = 0.0, tol = 0.5, n = 200, size = 0.2) + theme_light() + scale_x_log10(&quot;Kd: uM&quot;, breaks = c(1*10^-8, 1*10^-7, 1*10^-6, 10*10^-6), labels = function(breaks) ((breaks*10^6)) ) + #scale_y_continuous(&quot;DH: kcal/mol&quot;) + scale_y_discrete(name = NULL) + coord_cartesian(xlim = c(1*10^-8, 25*10^-6)) + #scale_fill_gradientn(colours = c(&quot;cyan&quot;, &quot;black&quot;, &quot;red&quot;),) #scale_fill_gradientn(colors = error_colors, values = scales::rescale(c(1, 1.1, 1.2, 1.5, 2.5)), space = &quot;Lab&quot;) + #scale_colour_gradientn(colors = error_colors, limits = c(1,2.5), values = scales::rescale(c(1, 1.1, 1.2, 1.5, 2.5)), space = &quot;Lab&quot;) + # scale_color_grey(end = 0.5) + scale_color_manual(., values = itc_octet_colors) + theme(legend.position = &quot;none&quot;) + #scale_fill_gradientn(colors = c(&quot;blue&quot;, &quot;yellow&quot;, &quot;red&quot;), breaks= c(1, 1.2, 1.5)) + facet_grid(. ~ .) print(itc_octet_comp_plot) ggsave(&quot;./itc_octet_ggplot.jpeg&quot;, itc_octet_comp_plot, device = &quot;jpeg&quot;, width = 60, height = 20, units = c(&quot;mm&quot;)) ggsave(&quot;./itc_octet_ggplot.ps&quot;, itc_octet_comp_plot, device = &quot;ps&quot;, width = 60, height = 20, units = c(&quot;mm&quot;)) Comparison of affinities from ITC and BLI. Not shown in ms. NTF2group_tib &lt;- tribble(~NTF2, ~NTF2group, &quot;NTF2WT&quot;, &quot;aWT&quot;, &quot;H31A&quot;, &quot;bH31A&quot;, &quot;NTF2YY&quot;, &quot;cH31YH62Y&quot;) ligandgroup_tib &lt;- tribble(~Ligand, ~ligandgroup, &quot;NONE&quot;, &quot;aNONE&quot;, &quot;USP&quot;, &quot;bUSP&quot;, &quot;CAP&quot;, &quot;cCAP&quot;) PHvalues_tib &lt;- tribble(~PHstring, ~PHvalues, &quot;PH75&quot;, 7.5, &quot;PH56&quot;, 5.6) itc_affinity_values &lt;- sedlist_KDerror_sedphat_preplot %&gt;% dplyr::select(., !c(&quot;ligand&quot;, &quot;lig_type_corr&quot;)) %&gt;% separate(., folder, into = c(&quot;NTF2&quot;, &quot;PHstring&quot;, &quot;Ligand&quot;, &quot;RM&quot;), sep = &quot;_&quot;) %&gt;% left_join(., NTF2group_tib) %&gt;% left_join(., ligandgroup_tib) %&gt;% left_join(., PHvalues_tib) %&gt;% dplyr::mutate(., value = log10(Kdvalue), value_min = log10(Kdmin), value_max = log10(Kdmax)) %&gt;% ungroup() %&gt;% dplyr::select(., !c(&quot;Kdvalue&quot;)) %&gt;% dplyr::select(., NTF2group, ligandgroup, PHvalues, contains(&quot;value&quot;)) %&gt;% dplyr::mutate(., method = &quot;aITC&quot;, value_type = &quot;affinity&quot;) nDSF_data &lt;- readRDS(&quot;./nanoDSF_export.rds&quot;) binding_data_comp &lt;- itc_affinity_values %&gt;% full_join(., nDSF_data) LIGcolor_scale &lt;- tribble(~name, ~value, c( &quot;aNONE&quot;, &quot;bUSP&quot;, &quot;cCAP&quot;, &quot;scale&quot;), c(&quot;#D1D1D1&quot; ,&quot;#B9C9AD&quot;,&quot;#3FC6D8&quot;, &quot;#FFFFFF00&quot;)) %&gt;% unnest(., name, value) %&gt;% deframe() NTF2group_tib &lt;- as_tibble(c(&quot;aWT&quot;, &quot;bH31A&quot;, &quot;cH31YH62Y&quot;)) %&gt;% dplyr::select(., NTF2group = value) add_facets &lt;- tribble(~PHvalues, ~value, ~value_type, ~ligandgroup, 8.5, -7, &quot;affinity&quot;, &quot;scale&quot;, 5, -4, &quot;affinity&quot;, &quot;scale&quot;, 8.5, 20, &quot;dTm&quot;, &quot;scale&quot;, 5, -5, &quot;dTm&quot;, &quot;scale&quot;) add_facets &lt;- add_facets %&gt;% dplyr::group_by(., ligandgroup) %&gt;% nest() %&gt;% dplyr::mutate(., NTF2group = list(NTF2group_tib)) %&gt;% unnest(., NTF2group) %&gt;% unnest(data) binding_data_comp_filtered &lt;- binding_data_comp %&gt;% dplyr::filter(., PHvalues &lt; 8, ligandgroup != &quot;aNONE&quot;) %&gt;% full_join(., add_facets) invert_y &lt;- function(x){ x_out &lt;- x*(-1) return(x_out) } binding_data_comp_affinity &lt;- binding_data_comp_filtered %&gt;% dplyr::filter(., value_type == &quot;affinity&quot;) %&gt;% dplyr::mutate(across(c(&quot;value&quot;, &quot;value_min&quot;, &quot;value_max&quot;), invert_y)) %&gt;% dplyr::filter(., ligandgroup != &quot;scale&quot;) #%&gt;% dplyr::mutate(., value_mod = -value) %&gt;% binding_data_compplot &lt;- ggplot() + geom_col(data = binding_data_comp_affinity, aes(x = PHvalues, y = value, fill = ligandgroup), position = &quot;dodge&quot;, colour = &quot;black&quot;) + geom_errorbar(data = binding_data_comp_affinity, aes(x = PHvalues, ymin = value_min, ymax = value_max, group = ligandgroup), position = &quot;dodge&quot;, size = 0.5) + geom_point(data = binding_data_comp_affinity %&gt;% dplyr::group_by(NTF2group, PHvalues, value_type) %&gt;% dplyr::summarize(., method = unique(method)) %&gt;% dplyr::mutate(., value = 4.5),aes(x = PHvalues, y = value, colour = method), size = 2) + #scale_color_grey() + scale_color_manual(values = c(&quot;black&quot;, &quot;red&quot;)) + scale_fill_manual(values = LIGcolor_scale) + #scale_x_log10() + scale_y_continuous(breaks = c(5,6)) + scale_x_continuous() + coord_cartesian(xlim = c(4.5,9), ylim = c(4.5, 6.5)) + #coord_cartesian() + theme_light() + theme(panel.grid.major.y = element_line(colour = &quot;grey50&quot;)) + #legend.position = &quot;null&quot; #coord_flip(xlim = c(4,8), ylim = c(20,80)) + facet_grid(value_type ~ NTF2group, scales = &quot;free_y&quot;) print(binding_data_compplot) ggsave(&quot;./binding_data_compplot.jpeg&quot;, binding_data_compplot, device=&quot;jpeg&quot;, width = 150, height = 45, units = c(&quot;mm&quot;)) ggsave(&quot;./binding_data_compplot.ps&quot;, binding_data_compplot, device=&quot;ps&quot;, width = 150, height = 45, units = c(&quot;mm&quot;)) Comparison of affinities from ITC and nanoDSF. Figure 4G in ms. 4.2 Result table sedlist_2Derror_sedphat_fitresults_tab &lt;- sedlist_2Derror_sedphat_preplot %&gt;% dplyr::filter(., chinorm &lt; crifac) %&gt;% dplyr::summarize(., dH_mean = mean(dH), dH_up = max(dH), dH_lo = min(dH), Kd_mean = mean(logKd)*10^6, Kd_up = max(logKd)*10^6, Kd_lo = min(logKd)*10^6) %&gt;% dplyr::mutate_at(., vars(starts_with(&quot;dH&quot;)), funs(round(., 0))) %&gt;% dplyr::mutate_at(., vars(starts_with(&quot;Kd&quot;)), funs(round(., 3))) kable(sedlist_2Derror_sedphat_fitresults_tab, caption = &quot;**ITC global fit parameters with upper and lower fit limits **&quot;) Table 4.1: ITC global fit parameters with upper and lower fit limits folder dH_mean dH_up dH_lo Kd_mean Kd_up Kd_lo H31A_PH75_CAP_WT -13 -9 -18 17.633 35.343 5.601 H31A_PH75_USP_WT -16 -16 -18 2.716 3.286 2.073 NTF2WT_PH56_CAP_WT -14 -12 -15 1.498 2.256 0.898 NTF2WT_PH56_USP_WT -17 -16 -18 0.367 0.557 0.222 NTF2WT_PH75_CAP_L9A -15 -15 -15 20.741 20.741 20.741 NTF2WT_PH75_CAP_WT -16 -16 -17 2.191 2.710 1.710 NTF2WT_PH75_USP_WT -16 -15 -16 1.048 1.299 0.819 NTF2YY_PH75_CAP_WT -19 -18 -21 2.118 2.640 1.666 NTF2YY_PH75_USP_WT -14 -13 -15 0.552 0.868 0.275 Upper and lower fit limits estimated from F-statistics as implemented in Sedphat. dH in kcal/mole, Kd in uM. Plots were saved as postscript files, and edited into publication-quality figures using Adobe Illustrator. The bookdown document was created based on bookdown, and rtemps. "]]
